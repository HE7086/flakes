variable tenancy {
  type = string
}

variable vnic {
  type = string
}

variable availability_domain {
  type = string
}

terraform {
  required_providers {
    oci = {
      source = "oracle/oci"
    }
  }
}

## This configuration was generated by terraform-provider-oci

resource "oci_core_dhcp_options" "toaster" {
  compartment_id = var.tenancy
  vcn_id         = oci_core_vcn.toaster.id
  options {
    custom_dns_servers = [
    ]
    server_type = "VcnLocalPlusInternet"
    type        = "DomainNameServer"
  }
}

resource "oci_core_internet_gateway" "toaster" {
  compartment_id = var.tenancy
  vcn_id         = oci_core_vcn.toaster.id
}

resource "oci_core_subnet" "toaster" {
  cidr_block     = "10.0.0.0/24"
  compartment_id = var.tenancy
  vcn_id         = oci_core_vcn.toaster.id
}

resource "oci_core_route_table" "toaster" {
  compartment_id = var.tenancy
  vcn_id         = oci_core_vcn.toaster.id
  route_rules {
    destination       = "0.0.0.0/0"
    destination_type  = "CIDR_BLOCK"
    network_entity_id = oci_core_internet_gateway.toaster.id
  }
  route_rules {
    destination       = "::/0"
    destination_type  = "CIDR_BLOCK"
    network_entity_id = oci_core_internet_gateway.toaster.id
  }
}

resource "oci_core_vcn" "toaster" {
  cidr_blocks    = ["10.0.0.0/16"]
  compartment_id = var.tenancy
}

resource "oci_core_security_list" "toaster" {
  compartment_id = var.tenancy
  vcn_id         = oci_core_vcn.toaster.id
  egress_security_rules {
    destination      = "0.0.0.0/0"
    destination_type = "CIDR_BLOCK"
    protocol         = "all"
    stateless        = "false"
  }
  egress_security_rules {
    destination      = "::/0"
    destination_type = "CIDR_BLOCK"
    protocol         = "all"
    stateless        = "false"
  }
  ingress_security_rules {
    protocol    = "6"
    source      = "0.0.0.0/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
    tcp_options {
      max = "22"
      min = "22"
    }
  }
  ingress_security_rules {
    protocol    = "6"
    source      = "::/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
    tcp_options {
      max = "22"
      min = "22"
    }
  }
  ingress_security_rules {
    protocol    = "17"
    source      = "0.0.0.0/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
    udp_options {
      max = "51820"
      min = "51820"
    }
  }
  ingress_security_rules {
    protocol    = "17"
    source      = "::/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
    udp_options {
      max = "51820"
      min = "51820"
    }
  }
  ingress_security_rules {
    protocol    = "1"
    source      = "0.0.0.0/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
  }
  ingress_security_rules {
    protocol    = "58"
    source      = "::/0"
    source_type = "CIDR_BLOCK"
    stateless   = "false"
  }
}

resource "oci_core_private_ip" "toaster" {
  hostname_label = "toaster"
  ip_address     = "10.0.0.114"
  lifetime       = "EPHEMERAL"
  subnet_id      = oci_core_subnet.toaster.id
  vnic_id        = data.oci_core_vnic.toaster.id
}

resource "oci_core_instance" "toaster" {
  agent_config {
    are_all_plugins_disabled = "true"
    is_management_disabled   = "true"
    is_monitoring_disabled   = "true"
  }
  availability_config {
    recovery_action = "RESTORE_INSTANCE"
  }
  availability_domain = var.availability_domain
  compartment_id      = var.tenancy
  create_vnic_details {
    assign_public_ip       = "true"
    display_name           = "vnic-toaster"
    hostname_label         = "toaster"
    private_ip             = "10.0.0.114"
    skip_source_dest_check = "false"
    subnet_id              = oci_core_subnet.toaster.id
  }
  launch_options {
    boot_volume_type                    = "PARAVIRTUALIZED"
    firmware                            = "UEFI_64"
    is_consistent_volume_naming_enabled = "true"
    is_pv_encryption_in_transit_enabled = "false"
    network_type                        = "PARAVIRTUALIZED"
    remote_data_volume_type             = "PARAVIRTUALIZED"
  }
  shape = "VM.Standard.A1.Flex"
  shape_config {
    baseline_ocpu_utilization = ""
    memory_in_gbs             = "24"
    nvmes                     = "0"
    ocpus                     = "4"
    vcpus                     = "4"
  }
  source_details {
    boot_volume_size_in_gbs = "47"
    boot_volume_vpus_per_gb = "10"
    source_type             = "image"
  }
}

data "oci_core_vnic" "toaster" {
  vnic_id = var.vnic
}

output "ipv4" {
  value = data.oci_core_vnic.toaster.public_ip_address
}

output "ipv6" {
  value = data.oci_core_vnic.toaster.ipv6addresses[0]
}
